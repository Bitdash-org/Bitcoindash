# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    working_directory: ~/repo
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/golang:1.15.8
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - setup_remote_docker: 
      -  docker_layer_caching:
      - run:
          command:    EXIT_STATUS=1 if [[ $EXIT_STATUS == 0 ]] then echo yes else (exit $EXIT_STATUS) fi       
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Run tests
          command: |
            mkdir -p /tmp/test-reports
            gotestsum --junitfile /tmp/test-reports/unit-tests.xml
      - store_test_results:
          path: /tmp/test-reportsversion: 2.1 workflows: sample: jobs: - build-and-test-frontend jobs: build-and-test-frontend: docker: - image: cimg/node:14.17 working_directory: ./frontend steps: - checkout - restore_cache: name: Restore Yarn Package Cache keys: - yarn-packages-{{ checksum "yarn.lock" }} - run: name: Run jest tests command: | yarn install --frozen-lockfile --cache-folder ~/. yarn test - save_cache: name: Save Yarn Package Cache key: yarn-packages-{{ checksum "yarn.lock" }} paths: - ~/.cache/yarn

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
  workflows: 
    sample: 
      jobs: 
        - build-and-test-frontend 
        jobs: 
          build-and-test-frontend: 
            
            docker: 
              - image: cimg/node:14.17 
              working_directory: 
                ./frontend steps: 
                  - checkout 
                  - restore_cache: 
                    name: 
                      
                      Restore Yarn Package Cache 
                      keys: 
                        - yarn-packages-{{ checksum "yarn.lock" }} 
                        
                        - run: 
                          name: 
                            
                            Run jest tests 
                            command: 
                              | yarn install --frozen-lockfile --cache-folder ~/. yarn test
                            - save_cache: 
                              name: 
                              Save Yarn Package Cache 
                               key: 
                               yarn-packages-{{ checksum "yarn.lock" }}
                                      paths: - ~/.cache/yarn
